<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.opengamma</groupId>
  <artifactId>corporate-parent</artifactId>
  <packaging>pom</packaging>
  <name>Corporate-Parent</name>
  <version>2.8.8</version>
  <description>OpenGamma maven corporate parent project</description>

  <!-- ==================================================================== -->
  <organization>
    <name>OpenGamma</name>
    <url>http://www.opengamma.com</url>
  </organization>

  <!-- ==================================================================== -->
  <!-- information required for Maven Central that MUST be checked/overridden when extending -->
  <url>http://developers.opengamma.com/</url>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:https://github.com/OpenGamma/${github.repo}.git</connection>
    <developerConnection>scm:git:https://github.com/OpenGamma/${github.repo}.git</developerConnection>
    <url>https://github.com/OpenGamma/${github.repo}</url>
  </scm>
  <developers>
    <developer>
      <id>opengamma</id>
      <name>OpenGamma</name>
    </developer>
  </developers>

  <!-- ==================================================================== -->
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[3.3.0,)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
        <dependencies>
        <dependency>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>extra-enforcer-rules</artifactId>
          <version>${extra-enforcer-rules.version}</version>
        </dependency>
        </dependencies>
      </plugin>
    </plugins>
    <!-- Manage plugin versions -->
    <pluginManagement>
      <plugins>
        <!-- Maven build and reporting plugins (alphabetical) -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>
          <!-- trigger m2e to use checkstyle -->
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
            <dependency>
              <groupId>com.opengamma</groupId>
              <artifactId>build-config</artifactId>
              <version>${build-config.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>run-checkstyle</id>
              <phase>process-sources</phase>
              <goals>
                <goal>checkstyle</goal>
              </goals>
            </execution>
            <execution>
              <id>run-checkstyle-test</id>
              <phase>process-sources</phase>
              <goals>
                <goal>checkstyle</goal>
              </goals>
              <configuration>
                <includeTestSourceDirectory>true</includeTestSourceDirectory>
                <configLocation>${checkstyle.config.test}</configLocation>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <includeResources>false</includeResources>
            <includeTestResources>false</includeTestResources>
            <includeTestSourceDirectory>false</includeTestSourceDirectory>
            <consoleOutput>true</consoleOutput>
            <failsOnError>true</failsOnError>
            <configLocation>${checkstyle.config.main}</configLocation>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <compilerArgs>
              <arg>-parameters</arg>
            </compilerArgs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.shared</groupId>
              <artifactId>maven-dependency-analyzer</artifactId>
              <version>${maven-dependency-analyzer.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-failsafe-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven-gpg-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-help-plugin</artifactId>
          <version>${maven-help-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-invoker-plugin</artifactId>
          <version>${maven-invoker-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <!-- add standard entries to jar manifest -->
          <configuration>
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <!-- add standard entries to jar manifest -->
          <configuration>
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
            <additionalOptions>
              <additionalOption>--allow-script-in-comments</additionalOption>
            </additionalOptions>
            <doclint>none</doclint>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${maven-plugin-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${maven-pmd-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <preparationGoals>clean validate</preparationGoals>
            <tagNameFormat>v@{project.version}</tagNameFormat>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-remote-resources-plugin</artifactId>
          <version>${maven-remote-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-repository-plugin</artifactId>
          <version>${maven-repository-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <!-- add standard entries to jar manifest -->
          <configuration>
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <includes>
              <include>**/*Test.java</include>
            </includes>
            <argLine>-Xmx${tests.testng.maxheap}</argLine>
            <parallel>${tests.testng.parallel}</parallel>
            <threadCount>${tests.testng.threads}</threadCount>
            <!-- remove slow SuiteHTMLReporter -->
            <properties>
              <property>
                <name>usedefaultlisteners</name>
                <value>false</value>
              </property>
              <property>
                <name>listener</name>
                <value>org.testng.reporters.ExitCodeListener</value>
              </property>
              <property>
                <name>reporter</name>
                <value>org.testng.reporters.JUnitReportReporter</value>
              </property>
            </properties>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-verifier-plugin</artifactId>
          <version>${maven-verifier-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
        </plugin>

        <!-- Additional external maven plugins -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>${buildnumber-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>de.thetaphi</groupId>
          <artifactId>forbiddenapis</artifactId>
          <version>${forbiddenapis-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.siom79.japicmp</groupId>
          <artifactId>japicmp-maven-plugin</artifactId>
          <version>${japicmp-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jetbrains.kotlin</groupId>
          <artifactId>kotlin-maven-plugin</artifactId>
          <version>${kotlin-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>de.jutzig</groupId>
          <artifactId>github-release-plugin</artifactId>
          <version>${github-release-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.bazaarvoice.maven.plugins</groupId>
          <artifactId>s3-upload-maven-plugin</artifactId>
          <version>${s3-upload-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>jakarta.xml.bind</groupId>
              <artifactId>jakarta.xml.bind-api</artifactId>
              <version>${jakarta.xml.bind-api.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>

        <!-- Additional controlled maven plugins -->
        <plugin>
          <groupId>org.joda</groupId>
          <artifactId>joda-beans-maven-plugin</artifactId>
          <version>${joda-beans-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>${jib-maven-plugin.version}</version>
        </plugin>

        <!-- Maven eclipse plugins -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <versionRange>[${maven-enforcer-plugin.version},)</versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[${maven-dependency-plugin.version},)</versionRange>
                    <goals>
                      <goal>copy</goal>
                      <goal>copy-dependencies</goal>
                      <goal>get</goal>
                      <goal>unpack</goal>
                      <goal>unpack-dependencies</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <versionRange>[${buildnumber-maven-plugin.version},)</versionRange>
                    <goals>
                      <goal>create</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <!-- ==================================================================== -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.joda</groupId>
        <artifactId>joda-beans</artifactId>
        <version>${joda-beans.version}</version>
      </dependency>
      <dependency>
        <groupId>org.joda</groupId>
        <artifactId>joda-convert</artifactId>
        <version>${joda-convert.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- ==================================================================== -->
  <!-- Avoid generating test-javadoc and test-jxr, but do generate surefire and checkstyle -->
  <!-- Turn off checkstyle with 'checkstyle.skip' property -->
  <!-- Override checksyle config with 'checkstyle.config.location' property -->
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
              <report>dependency-info</report>
              <report>scm</report>
              <report>summary</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven-surefire-report-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>report-only</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>jxr</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <!-- ==================================================================== -->
  <profiles>
    <!-- setup to run tests with code coverage, activated with -Dcoverage -->
    <profile>
      <id>coverage</id>
      <activation>
        <property>
          <name>coverage</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
              <argLine>-Xmx${tests.testng.maxheap} ${argLine}</argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <reportSets>
              <reportSet>
                <id>single</id>
                <reports>
                  <report>report</report>
                </reports>
              </reportSet>
            </reportSets>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <!--  integrate joda-beans with Eclipse -->
    <profile>
      <id>joda-beans-eclipse</id>
      <activation>
        <property>
          <name>eclipse.buildId</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.joda</groupId>
            <artifactId>joda-beans-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <goals>
                  <goal>generate-no-resolve</goal>
                </goals>
                <configuration>
                  <eclipse>true</eclipse>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Open source deployment profile, activated by -Doss.repo -->
    <profile>
      <id>release-artifacts</id>
      <activation>
        <property>
          <name>oss.repo</name>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- Defend against releasing private code to Maven Central -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-protection</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesExist>
                      <files>
                       <file>${root.dir}/LICENSE.txt</file>
                       <file>${root.dir}/NOTICE.txt</file>
                      </files>
                      <message>Missing license files. Are you trying to release a private project to Maven Central!</message>
                    </requireFilesExist>
                    <requireEnvironmentVariable>
                      <variableName>CI</variableName>
                      <variableName>GPG_KEY_NAME</variableName>
                      <variableName>GPG_PASSPHRASE</variableName>
                      <variableName>OSS_SONATYPE_USER</variableName>
                      <variableName>OSS_SONATYPE_PASSWORD</variableName>
                      <message>Missing environment variables. Are you trying to release a private project to Maven Central!</message>
                    </requireEnvironmentVariable>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Sign artifacts -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <!-- This can probably be removed once plugin updated to v1.7 -->
                <!-- It is necessary for gpg v2.1 and later -->
                <configuration>
                  <gpgArguments>
                    <gpgArgument>--pinentry-mode</gpgArgument>
                    <gpgArgument>loopback</gpgArgument>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- Use nexus plugin to directly release -->
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>${nexus-staging-maven-plugin.version}</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>oss-sonatype</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <description>Releasing ${project.groupId}:${project.artifactId}:${project.version}</description>
              <autoReleaseAfterClose>${nexus.staging.autoRelease}</autoReleaseAfterClose>
              <keepStagingRepositoryOnCloseRuleFailure>true</keepStagingRepositoryOnCloseRuleFailure>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <distributionManagement>
        <repository>
          <id>oss-sonatype</id>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
      </distributionManagement>
    </profile>
  </profiles>

  <!-- ==================================================================== -->
  <properties>
    <!-- Plugin version numbers -->
    <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
    <maven-assembly-plugin.version>3.4.2</maven-assembly-plugin.version>
    <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
    <maven-clean-plugin.version>3.2.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
    <maven-deploy-plugin.version>3.0.0</maven-deploy-plugin.version>
    <!-- maven-dependency-plugin v3.1.2 and v3.2.0 are broken https://issues.apache.org/jira/browse/MDEP-757 -->
    <!-- maven-dependency-plugin v3.3.0 also seems to break for us -->
    <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
    <maven-enforcer-plugin.version>3.0.0</maven-enforcer-plugin.version>
    <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
    <maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
    <maven-help-plugin.version>3.3.0</maven-help-plugin.version>
    <maven-install-plugin.version>3.0.1</maven-install-plugin.version>
    <maven-invoker-plugin.version>3.3.0</maven-invoker-plugin.version>
    <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>3.4.1</maven-javadoc-plugin.version>
    <maven-jxr-plugin.version>3.2.0</maven-jxr-plugin.version>
    <maven-plugin-plugin.version>3.6.4</maven-plugin-plugin.version>
    <maven-pmd-plugin.version>3.17.0</maven-pmd-plugin.version>
    <maven-project-info-reports-plugin.version>3.4.1</maven-project-info-reports-plugin.version>
    <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    <maven-remote-resources-plugin.version>3.0.0</maven-remote-resources-plugin.version>
    <maven-repository-plugin.version>2.4</maven-repository-plugin.version>
    <maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
    <maven-shade-plugin.version>3.3.0</maven-shade-plugin.version>
    <maven-site-plugin.version>3.9.1</maven-site-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
    <maven-surefire-report-plugin.version>3.0.0-M5</maven-surefire-report-plugin.version>
    <maven-verifier-plugin.version>1.1</maven-verifier-plugin.version>
    <maven-war-plugin.version>3.3.2</maven-war-plugin.version>
    <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>
    <buildnumber-maven-plugin.version>3.0.0</buildnumber-maven-plugin.version>
    <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>
    <extra-enforcer-rules.version>1.4</extra-enforcer-rules.version>
    <forbiddenapis-maven-plugin.version>3.3</forbiddenapis-maven-plugin.version>
    <github-release-plugin.version>1.4.0</github-release-plugin.version>
    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
    <jib-maven-plugin.version>3.3.2</jib-maven-plugin.version>
    <joda-beans-maven-plugin.version>1.3.2</joda-beans-maven-plugin.version>
    <japicmp-maven-plugin.version>0.15.7</japicmp-maven-plugin.version>
    <kotlin-maven-plugin.version>1.5.31</kotlin-maven-plugin.version>
    <!-- maven-dependecy-plugin is fussy, this version seems to work OK, https://issues.apache.org/jira/browse/MDEP-613 -->
    <!-- Note that v1.12.0 did not work -->
    <maven-dependency-analyzer.version>1.11.3</maven-dependency-analyzer.version>
    <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
    <s3-upload-plugin.version>1.5</s3-upload-plugin.version>
    <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
    <spotbugs-maven-plugin.version>3.1.12.2</spotbugs-maven-plugin.version>
    <versions-maven-plugin.version>2.11.0</versions-maven-plugin.version>

    <!-- Versions -->
    <jakarta.xml.bind-api.version>2.3.2</jakarta.xml.bind-api.version>
    <joda-beans.version>2.11.0</joda-beans.version>
    <joda-convert.version>2.2.3</joda-convert.version>

    <!-- Properties for maven-compiler-plugin -->
    <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.fork>true</maven.compiler.fork>
    <maven.compiler.verbose>false</maven.compiler.verbose>
    <!-- Properties for maven-javadoc-plugin -->
    <minmemory>512m</minmemory>
    <maxmemory>2048m</maxmemory>
    <author>false</author>
    <notimestamp>true</notimestamp>
    <!-- Properties for maven-checkstyle-plugin -->
    <build-config.version>2.8.0</build-config.version>
    <checkstyle.version>8.45.1</checkstyle.version>
    <checkstyle.config.suffix>-v${checkstyle.version}</checkstyle.config.suffix>
    <checkstyle.excludes>module-info.java</checkstyle.excludes>
    <checkstyle.config.main>checkstyle/checkstyle-main${checkstyle.config.suffix}.xml</checkstyle.config.main>
    <checkstyle.config.test>checkstyle/checkstyle-test${checkstyle.config.suffix}.xml</checkstyle.config.test>
    <checkstyle.enable.rss>false</checkstyle.enable.rss>
    <!-- Properties for buildnumber-maven-plugin -->
    <maven.buildNumber.getRevisionOnlyOnce>true</maven.buildNumber.getRevisionOnlyOnce>
    <maven.buildNumber.revisionOnScmFailure>UNKNOWN</maven.buildNumber.revisionOnScmFailure>
    <!-- Properties for maven-joda-bean-plugin -->
    <joda.beans.indent>2</joda.beans.indent>
    <joda.beans.stopOnError>false</joda.beans.stopOnError>
    <joda.beans.version>${joda-beans.version}</joda.beans.version><!-- Version for plugin -->
    <!-- Properties for maven-surefire-report-plugin -->
    <alwaysGenerateSurefireReport>false</alwaysGenerateSurefireReport>
    <!-- Testing properties -->
    <tests.testng.maxheap>1G</tests.testng.maxheap>
    <tests.testng.parallel>classes</tests.testng.parallel>
    <tests.testng.threads>4</tests.testng.threads>

    <!-- Locate the root directory of the multi-module build -->
    <root.dir>${project.basedir}</root.dir>

    <!-- Other properties -->
    <github.repo>OG-Tools</github.repo>
    <gpg.executable>gpg</gpg.executable>
    <gpg.keyname>${env.GPG_KEY_NAME}</gpg.keyname>
    <gpg.passphrase>${env.GPG_PASSPHRASE}</gpg.passphrase>
    <nexus.staging.autoRelease>true</nexus.staging.autoRelease>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

</project>
